<project name="Korsakow" basedir="../" xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<property environment="env" />

	<target name="dependencies-common">
		<!--
		Normally we would use env.JAVA_HOME here but environment variables have very poor
		support w.r.t. GUI applications on OSX, so we hope that the environment is setup
		such that java.home is the jre embedded in the JAVA_HOME jdk.
		-->
    	<property name="JDK_HOME" value="${java.home}/../" />
    	<property name="JRE_HOME" value="${java.home}" />

    	<taskdef resource="com/sun/javafx/tools/ant/antlib.xml"       
    	            uri="javafx:com.sun.javafx.tools.ant"
    	            classpath="${JDK_HOME}/lib/ant-javafx.jar"/>
	</target>
	
	<target name="dependencies-win32" depends="dependencies-common">
		<fail unless="env.LAUNCH4J_HOME" message="LAUNCH4J_HOME must be set" />
		<property name="LAUNCH4J_HOME" value="${env.LAUNCH4J_HOME}" />

		<taskdef name="launch4j"
		    classname="net.sf.launch4j.ant.Launch4jTask"
		    classpath="${LAUNCH4J_HOME}/launch4j.jar:${LAUNCH4J_HOME}/lib/xstream.jar" />	
	</target>
	
	<target name="dependencies-osx" depends="dependencies-common">
	    <property name="signed" value="${env.KORSAKOW_BUILD_SIGNED}" />

		<taskdef name="bundleapp"
		         classname="com.oracle.appbundler.AppBundlerTask"
		         classpath="main/lib/appbundler-1.0.jar" />
	</target>
	
	<!-- input -->
	<target name="userInput">
		<input
		    message="Milestone Version (eg: 8.0):"
		    addproperty="release-number"
			defaultvalue="x"
		/>

		<input 
		    message="(optional) SSH username:"
		    addproperty="ssh.user"
		/>
		<input
		    message="(optional) SSH password:"
		    addproperty="ssh.pass"
		/>
	</target>

	<!-- /input -->

	<!-- config -->
	<property name="lib-dir" location="main/lib" />
	<property name="main-src-dir" location="main/src" />
	<property name="wix-src-dir" location="wix/src" />
	<property name="resources-dir" location="${main-src-dir}/resources" />
	<property name="build-dir" location="build" />
	<property name="compile-dir" location="build/compile" />
	<property name="main-compile-dir" location="${compile-dir}/main" />
	<property name="dist-dir" location="build/dist" />
	<property name="osx" value="osx" />
	<property name="win32" value="win32" />
	<property name="multiplaf" value="multiplaf" />
	<property name="plaf-osx-dir" value="plaf/${osx}" />
	<property name="plaf-win32-dir" value="plaf/${win32}" />
	<property name="plaf-win32-install-dir" value="${plaf-win32-dir}/install" />
	<property name="plaf-multiplaf-dir" value="plaf/${multiplaf}" />
	<property name="resources-dir" location="src/resources" />
	<property name="korsakow-filename" value="lib.jar" />
	<property name="korsakow-manifest" value="ant/korsakow-MANIFEST.MF" />

	<property name="non-osx-resources" value="resources/**/${win32}/*" />
	<property name="non-win32-resources" value="resources/**/${osx}/*" />

	<fileset id="lib-jars" casesensitive="true" dir="${lib-dir}" >
		<patternset>
			<include name="*.jar" />
		</patternset>
	</fileset>

	<fileset id="resources-files" casesensitive="true" dir="${resources-dir}" />
	<fileset id="src-non-java-files" casesensitive="true" dir="${main-src-dir}">
		<patternset>
			<include name="*.properties" />
		</patternset>
	</fileset>

	<fileset id="circle-of-life" casesensitive="true" dir="${resources-dir}/example" />

	<!-- /config -->

	<!-- (real) targets -->

	<target name="clean">
		<delete dir="${build-dir}" />
	</target>

	<target name="init">
        <property name="release-number" value="999.999" />
		<tstamp />
		<echo message="Build ${release-number}" />
		<buildnumber file="${resources-dir}/build"/>
		<propertyfile file="${resources-dir}/build">
			<entry key="release.number" value="${release-number}" />
		</propertyfile>
	</target>

	<target name="compile" depends="init">
		<mkdir dir="${main-compile-dir}" />
		<javac target="1.8" srcdir="${main-src-dir}"  destdir="${main-compile-dir}" debug="true" debuglevel="lines,vars,source">
			<classpath>
				<fileset refid="lib-jars" />
			</classpath>
		</javac>
	</target>

	<target name="extract-libs" depends="init">
		<unjar dest="${main-compile-dir}">
			<fileset refid="lib-jars" />
		</unjar>
	</target>

	<target name="dist-common" depends="compile, extract-libs">
		<mkdir dir="${dist-dir}" />
		<copy todir="${main-compile-dir}/src">
			<fileset file="${main-src-dir}" />
		</copy>
		<copy todir="${main-compile-dir}">
			<fileset refid="src-non-java-files" />
		</copy>
	</target>
	
	<target name="sign-osx" if="signed">
        <exec executable="codesign" failonerror="true" logerror="true">
            <arg value="--deep" /> <!-- required to sign bundled jre -->
            <arg value="-f" />
            <arg value="-s" />
            <arg value="Developer ID Application: David Reisch" />
            <arg value="${dist-dir}/${plaf-osx-dir}/Korsakow.app" />
        </exec>
        
        <!-- fail the build if signing failed -->
        <exec executable="spctl" failonerror="true" logerror="true">
            <arg value="--assess" />
            <arg value="--type" />
            <arg value="execute" />
            <arg value="${dist-dir}/${plaf-osx-dir}/Korsakow.app" />
        </exec>
	</target>

	<target name="dist-osx" depends="dependencies-osx, dist-common">
		<mkdir dir="${dist-dir}/${plaf-osx-dir}" />
		<property name="osx-output" value="${dist-dir}/korsakow-${release-number}.dmg" />

        <fx:jar destfile="${compile-dir}/${korsakow-filename}" verbose="true">
          <fx:platform javafx="2.1+" j2se="8.0" />
          <fx:application mainClass="org.korsakow.ide.Main"/>
          <fileset dir="${main-compile-dir}" />
        </fx:jar>
        
        <bundleapp outputdirectory="${dist-dir}/${plaf-osx-dir}"
            name="Korsakow"
            displayname="Korsakow" 
            identifier="Korsakow"
        	copyright="Korsakow"
        	icon="${lib-dir}/osx/korsakow.icns"
        	shortversion="${release-number}"
            mainclassname="org.korsakow.ide.Main">
            <runtime dir="${JDK_HOME}" /> <!-- need to pass the JDK loc so it can pick up Info.plist, but it still just bundles the embedded JRE -->
            <classpath file="${lib-dir}/osx/OSXApplication.jar" />
            <classpath file="${compile-dir}/${korsakow-filename}" />
        </bundleapp>
    
		<exec executable="rsync" failonerror="true" logerror="true" >
			<arg value="--recursive" />
			<arg value="--times" />
			<arg value="--perms" />
			<arg value="--executability" />
			<arg value="--whole-file" />
			<arg value="--prune-empty-dirs" />
			<arg value="--exclude=*/win32/*" />
			<arg value="--exclude=*/win32" />
			<arg value="${resources-dir}" />
			<arg value="${dist-dir}/${plaf-osx-dir}/Korsakow.app/Contents/Java/" />
		</exec>

		<antcall target="sign-osx" />
		
		<!-- -size fixes an occasional error -5431 and doesnt seem to use space unless needed -->
        <exec executable="hdiutil" failonerror="true" logerror="true">
            <arg value="create" />
            <arg value="-volname" />
            <arg value="Korsakow" />
            <arg value="-srcfolder" />
            <arg value="${dist-dir}/${plaf-osx-dir}/Korsakow.app" />
            <arg value="-size" />
            <arg value="256MB" />
            <arg value="-ov" />
            <arg value="-format" />
            <arg value="UDZO" />
            <arg value="${osx-output}" />
    	</exec>
		
	</target>

	<target name="build-wix-task">
		<taskdef name="wix" classname="org.korsakow.build.WixTask" classpath="classes">
			<classpath>
				<pathelement location="${main-compile-dir}" />
			</classpath>
		</taskdef>
		<taskdef name="wixfiles" classname="org.korsakow.build.WixFilesTask" classpath="classes">
			<classpath>
				<pathelement location="${main-compile-dir}" />
			</classpath>
		</taskdef>
	</target>

	<target name="build-win32-installer" depends="build-wix-task">
		<mkdir dir="${dist-dir}/${plaf-win32-dir}/wix" />
			
		<wixfiles
			featureRef="ApplicationFiles"
			directoryRef="INSTALLDIR"
			sourcePath="${dist-dir}/${plaf-win32-install-dir}"
			outputFile="${dist-dir}/${plaf-win32-dir}/wix/Files.wxs"
			is64Bit="true"
			/>
		
		<wix
			workingDir="${dist-dir}/${plaf-win32-dir}/wix"
			outputFile="${win32-installer-output}"
			>
			<fileset dir="${lib-dir}/win32/installer" includes="*.wxs" />
			<fileset dir="${dist-dir}/${plaf-win32-dir}/wix" includes="Files.wxs" />
		</wix>
	</target>

	<target name="dist-win32" depends="dependencies-win32, dist-common">
		<property name="win32-installer-output" value="${dist-dir}/korsakow-${release-number}.msi" />
			
		<mkdir dir="${dist-dir}/${plaf-win32-install-dir}" />
		
		<launch4j configFile="${lib-dir}/win32/launch4j.xml"
			outfile="${dist-dir}/${plaf-win32-install-dir}/Korsakow.exe"
			>
		</launch4j>

        <fx:jar destfile="${dist-dir}/${plaf-win32-install-dir}/${korsakow-filename}" verbose="true">
          <fx:platform javafx="2.1+" j2se="8.0" />
          <fx:application mainClass="org.korsakow.ide.Main"/>
          <fileset dir="${main-compile-dir}" />
        </fx:jar>

		<copy 
			todir="${dist-dir}/${plaf-win32-install-dir}/resources"
			includeemptydirs="false"
			>
			<fileset dir="${resources-dir}">
				<exclude name="*/osx/*" />
			</fileset>
		</copy>

		<copy 
			todir="${dist-dir}/${plaf-win32-install-dir}/jre"
			includeemptydirs="false"
			>
			<fileset dir="${JRE_HOME}">
			</fileset>
		</copy>

        <copy 
            todir="${dist-dir}/${plaf-win32-install-dir}/jre"
            includeemptydirs="false"
            >
            <fileset dir="${JRE_HOME}">
            </fileset>
        </copy>

        <antcall target="build-win32-installer" />

	</target>

	<!-- /targets -->

    <target name="upload-win" depends="dist-win32">
		<property name="ssh.host" value="korsakow.net" />
		<scp todir="${ssh.user}@${ssh.host}:korsakow.net/releases/" password="${ssh.pass}" trust="true" verbose="true">
            <fileset file="${win32-installer-output}" />
		</scp>
    </target>

    <target name="upload-osx" depends="dist-osx">
		<property name="ssh.host" value="korsakow.net" />
		<scp todir="${ssh.user}@${ssh.host}:korsakow.net/releases/" password="${ssh.pass}" trust="true" verbose="true">
			<fileset file="${osx-output}" />
		</scp>
    </target>
</project>
